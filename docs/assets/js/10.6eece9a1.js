(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{298:function(t,a,s){"use strict";s.r(a);var n=s(17),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"basics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basics"}},[t._v("#")]),t._v(" Basics")]),t._v(" "),a("h2",{attrs:{id:"widget"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#widget"}},[t._v("#")]),t._v(" Widget")]),t._v(" "),a("iframe",{staticStyle:{margin:"0 calc(50% - 280px)"},attrs:{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/2Df24YXR5to",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),t._v("\nA widget is the base element for basically everything in objD.\n"),a("table",[a("thead",[a("tr",[a("th",[t._v("property")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("generate(Context)")]),t._v(" "),a("td",[t._v("returns the underlying Widget Tree")])]),t._v(" "),a("tr",[a("td",[t._v("toMap()")]),t._v(" "),a("td",[t._v("Similar to toString, but returns a Map tree of the child in generate")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")]),t._v("\nWe can use an Widget to get or build functionality. e.g")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// building our own widget:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomCommand")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Context")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// using an existing widget")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custom'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[t._v("#")]),t._v(" Context")]),t._v(" "),a("p",[t._v("Maybe you already wondered what this context argument here is:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Context")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n")])])]),a("p",[t._v("The Context is a way to get certain important information from the parents.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("properties")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("packId")]),t._v(" "),a("td",[t._v("String of the current pack's name")])]),t._v(" "),a("tr",[a("td",[t._v("file")]),t._v(" "),a("td",[t._v("the current file name")])]),t._v(" "),a("tr",[a("td",[t._v("prod")]),t._v(" "),a("td",[t._v("see if project is in production mode(bool)")])]),t._v(" "),a("tr",[a("td",[t._v("loadFile")]),t._v(" "),a("td",[t._v("the filename of your load file")])]),t._v(" "),a("tr",[a("td",[t._v("mainFile")]),t._v(" "),a("td",[t._v("the filename of your main file")])]),t._v(" "),a("tr",[a("td",[t._v("path")]),t._v(" "),a("td",[t._v("the current Path induced if Folder Widget is used")])]),t._v(" "),a("tr",[a("td",[t._v("prefixes")]),t._v(" "),a("td",[t._v("a List of Strings that should be added in front of actions(mainly used by Groups)")])])])]),t._v(" "),a("p",[t._v("You can use this context to build more modular Widgets and don't need to hardcode certain files and the pack id:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LoadWidget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Context")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function '")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("packId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loadFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"macros-function-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#macros-function-arguments"}},[t._v("#")]),t._v(" Macros / Function Arguments")]),t._v(" "),a("p",[t._v("Minecraft 1.20.2 added the feature to call functions with arguments that are replaced at runtime.\nThese macro commands have the following form:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$say This is a macro line, using $(key_1)!\n")])])]),a("p",[t._v("As objD is typesafe, this dynamic replacement proofs to be challenging to implement for all types.\nHere is a list of the supported types and the corresponding functions on Context.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("function")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("stringArgument")])]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("intArgument")])]),t._v(" "),a("tr",[a("td",[t._v("double")]),t._v(" "),a("td",[t._v("doubleArgument")])]),t._v(" "),a("tr",[a("td",[t._v("Entity")]),t._v(" "),a("td",[t._v("entityArgument")])]),t._v(" "),a("tr",[a("td",[t._v("Score")]),t._v(" "),a("td",[t._v("scoreArgument")])]),t._v(" "),a("tr",[a("td",[t._v("Location")]),t._v(" "),a("td",[t._v("locationArgument")])]),t._v(" "),a("tr",[a("td",[t._v("T")]),t._v(" "),a("td",[t._v("buildArgument (custom builder)")])])])]),t._v(" "),a("p",[t._v("A generic "),a("code",[t._v("argument")]),t._v(" function is also available that figures out which of these methods to use based on the expected return type.")]),t._v(" "),a("p",[t._v("In order to use these arguments, call these functions in your generate method:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Context")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" key_1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringArgument")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key_1'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Say")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is a macro line, using ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("key_1")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Important to know: objD generates random numbers for every argument except String. After the command has generated with the variable, the number now in string format is replaced with the macro name.\nIf you modify the variable in any way that alters the toString return value, this won't work. If you need a custom solution, use the "),a("code",[t._v("buildArgument")]),t._v(" method.")])]),t._v(" "),a("h3",{attrs:{id:"custom-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-arguments"}},[t._v("#")]),t._v(" Custom Arguments")]),t._v(" "),a("p",[t._v("In cases where the types do not suffice or the string replacement does not work properly, you can create a custom argument with "),a("code",[t._v("buildArgument")]),t._v(".\nThe context generates a non conflicting double for you, and you can provide an instance of the type and optionally override the string value that is going to be replaced:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" key_2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildArgument")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key_2'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" time "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("duration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reduce"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project"}},[t._v("#")]),t._v(" Project")]),t._v(" "),a("p",[t._v("The project is a special Widget which is just defined once. It contains some built options, like description or name, but also the entire underlying tree of packs, files and actions.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("name")]),t._v(" "),a("td",[t._v("the name of the datapack folder")])]),t._v(" "),a("tr",[a("td",[t._v("generate")]),t._v(" "),a("td",[t._v("a widget that defines the projects content")])]),t._v(" "),a("tr",[a("td",[t._v("[description]")]),t._v(" "),a("td",[t._v("A description that will go in pack.mcmeta")])]),t._v(" "),a("tr",[a("td",[t._v("[version]")]),t._v(" "),a("td",[t._v("The minimal supported Minecraft version as int (mc 1.16 -> 16)")])]),t._v(" "),a("tr",[a("td",[t._v("[packFormat]")]),t._v(" "),a("td",[t._v("Override the pack format in the mcmeta")])]),t._v(" "),a("tr",[a("td",[t._v("[supportedFormats]")]),t._v(" "),a("td",[t._v("A list of supported pack formats for the mcmeta")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create Project takes in one project and compiles it")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createProject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tested"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tversion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tgenerate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MainWidget")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"pack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pack"}},[t._v("#")]),t._v(" Pack")]),t._v(" "),a("p",[t._v("A pack is logically the next step. This defines a sub-pack with an name again that will be our namespace afterwards.\nHere we can also define included files as well as the main and load function:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("name")]),t._v(" "),a("td",[t._v("the name of the sub-pack")])]),t._v(" "),a("tr",[a("td",[t._v("[main]")]),t._v(" "),a("td",[t._v("the main file that is ran every tick")])]),t._v(" "),a("tr",[a("td",[t._v("[load]")]),t._v(" "),a("td",[t._v("the load file that is ran on reload")])]),t._v(" "),a("tr",[a("td",[t._v("[files]")]),t._v(" "),a("td",[t._v("A List of type File witch includes other needed files")])]),t._v(" "),a("tr",[a("td",[t._v("[modules]")]),t._v(" "),a("td",[t._v("used to inject a List of Modules(read more about modules in the Modules section)")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tpcraft"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tmain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tmodules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyModule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tfiles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("The Pack class can be used as often as you want and where you want, so you can also define a new pack in some file.")]),t._v(" "),a("blockquote",[a("p",[t._v("Notice: The namespace of the pack is accessible in these files by using the context variable. e.g:\n"),a("code",[t._v('Command("function" + context.packId + ":run")')])])]),t._v(" "),a("h2",{attrs:{id:"file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file"}},[t._v("#")]),t._v(" File")]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:""}},[t._v("Pack")]),t._v(" class already required some files. The file class simply generates a new mcfunction file with content and a path.")]),t._v(" "),a("p",[t._v("The File constructor has two required arguments:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("the desired file path going from "),a("code",[t._v("/data/:packId:/functions/")]),t._v(" on")])]),t._v(" "),a("tr",[a("td",[t._v("child")]),t._v(" "),a("td",[t._v("the content of the file")])]),t._v(" "),a("tr",[a("td",[t._v("execute")]),t._v(" "),a("td",[t._v("bool if the function should be executed directly(optional)")])]),t._v(" "),a("tr",[a("td",[t._v("create")]),t._v(" "),a("td",[t._v("bool if the file should be created or just interpreted with execute(optional, default = true)")])]),t._v(" "),a("tr",[a("td",[t._v("inheritFolder")]),t._v(" "),a("td",[t._v("bool if the file should use the inherited path from using Folder Widgets or use the root(default = true)")])]),t._v(" "),a("tr",[a("td",[t._v("pack")]),t._v(" "),a("td",[t._v("overrides the automatically detected namespace(optional)")])]),t._v(" "),a("tr",[a("td",[t._v("arguments")]),t._v(" "),a("td",[t._v("a Map, Storage, Entity or Location to get properties to replace 1.20 macros with")])])])]),t._v(" "),a("p",[t._v("The File class can be used as often as you want and where you want, so you can also define a new file in a For container for example.\n"),a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tpcraft"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tmain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and defining a new file inside of an widget")]),t._v("\n\t\tchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// same as execute: true")]),t._v("\n\t\t\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new'")])]),t._v("\n\t\t\tchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Tip: Execute "),a("code",[t._v(".run()")]),t._v(" on an existing File object and get an execute representation.")])]),t._v(" "),a("h2",{attrs:{id:"folder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#folder"}},[t._v("#")]),t._v(" Folder")]),t._v(" "),a("p",[t._v("The Folder Widget gives you a way to place all following files inside a specific folder path.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("the folder path")])]),t._v(" "),a("tr",[a("td",[t._v("child")]),t._v(" "),a("td",[t._v("another Widget that inherits the given path")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Folder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custom'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("For")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'main'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'subfolder/test'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Would create 2 functions: "),a("code",[t._v("functions/custom/main.mcfunction")]),t._v(" and "),a("code",[t._v("functions/custom/subfolder/test.mcfunction")])]),t._v(" "),a("p",[t._v("Tip: in case you need the path at any time, access it using context.path")]),t._v(" "),a("h2",{attrs:{id:"indexedfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexedfile"}},[t._v("#")]),t._v(" IndexedFile")]),t._v(" "),a("iframe",{staticStyle:{margin:"0 calc(50% - 280px)"},attrs:{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/H141kG7Rqfc",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),t._v(" "),a("p",[t._v("The IndexedFile behaves similar to File. Additionally it makes sure that each File, created with IndexedFile, is unique and does not get overwritten. In order to do that IndexedFile saves for each inputted name an id, which gets incremented after each use.\nThis helps with large scale third-party file generation for example with "),a("a",{attrs:{href:"#group"}},[t._v("Group")]),t._v(", Execute or If.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("the name of the desired file")])]),t._v(" "),a("tr",[a("td",[t._v("child")]),t._v(" "),a("td",[t._v("the content of the file")])]),t._v(" "),a("tr",[a("td",[t._v("execute")]),t._v(" "),a("td",[t._v("bool if the function should be executed directly(optional)")])]),t._v(" "),a("tr",[a("td",[t._v("custom")]),t._v(" "),a("td",[t._v("a custom name that overrides the id(useful for customization in Execute)")])]),t._v(" "),a("tr",[a("td",[t._v("path")]),t._v(" "),a("td",[t._v("an optional folder to add the new function(like "),a("code",[t._v("objd")]),t._v(" for Example)")])]),t._v(" "),a("tr",[a("td",[t._v("pack")]),t._v(" "),a("td",[t._v("overrides the automatically detected namespace")])]),t._v(" "),a("tr",[a("td",[t._v("inheritFolder")]),t._v(" "),a("td",[t._v("bool if the file should use the inherited path from using Folder Widgets or use the root(default = false)")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexedFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexedFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexedFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\texecute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"objd"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tpack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"custom"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Creates 3 files: "),a("code",[t._v("index1, index2, objd/index3")]),t._v(" and adds "),a("code",[t._v("function custom:objd/index3")]),t._v(" into the current file.")]),t._v(" "),a("h2",{attrs:{id:"rawfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rawfile"}},[t._v("#")]),t._v(" RawFile")]),t._v(" "),a("p",[t._v("The RawFile Widget enables you to generate your own Files right in the Wiget tree. Here you can define your own file extension, the file path and the content.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("the name of the file(with fileextension)")])]),t._v(" "),a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("the content of the file")])]),t._v(" "),a("tr",[a("td",[t._v("path")]),t._v(" "),a("td",[t._v("changes the default path(in your pack) of the new file")])]),t._v(" "),a("tr",[a("td",[t._v("inheritFolder")]),t._v(" "),a("td",[t._v("bool if the file should use the inherited path from using Folder Widgets or use the root(default = false)")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RawFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"predicate.json"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{...}'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/predicates"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"jsonfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsonfile"}},[t._v("#")]),t._v(" JsonFile")]),t._v(" "),a("p",[t._v("As a way to easily generate .json files, you can use the JsonFile wrapper. Just provide a map or a list and a path")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("path of the file(without .json extension)")])]),t._v(" "),a("tr",[a("td",[t._v("Map")]),t._v(" "),a("td",[t._v("the content of the file")])]),t._v(" "),a("tr",[a("td",[t._v("useGson")]),t._v(" "),a("td",[t._v("whether to generate gson or plain json")])]),t._v(" "),a("tr",[a("td",[t._v("inheritFolder")]),t._v(" "),a("td",[t._v("bool if the file should use the inherited path from using Folder Widgets or use the root(default = false)")])])])]),t._v(" "),a("p",[t._v("For a List just use "),a("code",[t._v("JsonFile.list")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"predicates/map"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"extend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extend"}},[t._v("#")]),t._v(" Extend")]),t._v(" "),a("p",[t._v("Extend is very similar to File, but instead of creating a new file it adds content to an existing file.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("the desired file path going from "),a("code",[t._v("/data/:packId:/functions/")]),t._v(" on")])]),t._v(" "),a("tr",[a("td",[t._v("child")]),t._v(" "),a("td",[t._v("the additional content")])]),t._v(" "),a("tr",[a("td",[t._v("first")]),t._v(" "),a("td",[t._v("Boolean if the content should be added in front of the original(default = false)")])]),t._v(" "),a("tr",[a("td",[t._v("inheritFolder")]),t._v(" "),a("td",[t._v("bool if the file should use the inherited path from using Folder Widgets or use the root(default = true)")])])])]),t._v(" "),a("p",[t._v("So lets say we already have some files in our pack, but want to add something to the main file somewhere entirely else in our project:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Extend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"say okay"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tfirst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("This would add the command "),a("code",[t._v("say okay")]),t._v(" in front of our main.mcfunction.")]),t._v(" "),a("h2",{attrs:{id:"command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command"}},[t._v("#")]),t._v(" Command")]),t._v(" "),a("p",[t._v("A Command is a raw action, that is executed by Minecraft directly.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v('the raw command in the format "/command" or "command"')])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// using a command in a file:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"command"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/say hey'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// uses the say command in command.mcfunction:")]),t._v("\nsay hey\n")])])]),a("h2",{attrs:{id:"for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for"}},[t._v("#")]),t._v(" For")]),t._v(" "),a("iframe",{staticStyle:{margin:"0 calc(50% - 280px)"},attrs:{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/4P4o3a6xyUU",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),t._v("\nThe For class enables you to add multiple endpoints to one Widget.\n"),a("p",[t._v("There is always a List of Widgets involved.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("to")]),t._v(" "),a("td",[t._v("the ending index including itself")])]),t._v(" "),a("tr",[a("td",[t._v("create")]),t._v(" "),a("td",[t._v("a function returning a Widget based on the index argument")])]),t._v(" "),a("tr",[a("td",[t._v("[from]")]),t._v(" "),a("td",[t._v("the starting index(default 0)")])]),t._v(" "),a("tr",[a("td",[t._v("[step ]")]),t._v(" "),a("td",[t._v("the value used in each iteration to increases the index(default 1)")])])])]),t._v(" "),a("p",[t._v("So the basic for class utilizes a loop from a value to another value:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"for"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("For")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tfrom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tcreate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/say '")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// results in:")]),t._v("\nsay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nsay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nsay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nsay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nsay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nsay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),a("p",[t._v("There is also an other Constructor for looping through a given list of widgets:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("For.of")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("List of Widgets")]),t._v(" "),a("td",[t._v("loops through each of these Widgets")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"for_of"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("For")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'say 1'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'say 2'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'say 3'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// results in:")]),t._v("\nsay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nsay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nsay "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("h2",{attrs:{id:"commandlist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commandlist"}},[t._v("#")]),t._v(" CommandList")]),t._v(" "),a("p",[t._v("But there is a more efficient way to list raw Minecraft commands. The CommandList Widget allows you to input a List of Commands, a List of Strings representing a command or a multiline string.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("List")]),t._v(" "),a("td",[t._v("a list of commands or strings")])])])]),t._v(" "),a("p",[t._v("This has basically the same function as For.of just for commands.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'say 1'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'say 2'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'say 3'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("But there is also a subset which accepts one big multiline string:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("CommandList.str")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("list of commands each on a seperate line")])])])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"""\n\t/say 1\n\t/say 2\n\t/say 3\n"""')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("The slashes are automatically filtered out.")]),t._v(" "),a("h2",{attrs:{id:"commandbuilder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commandbuilder"}},[t._v("#")]),t._v(" CommandBuilder")]),t._v(" "),a("p",[t._v("A widget which lets you construct complex commands with optional parts, multiple subcommands and different types of data in a declarative way.\nMainly used inside of wrapper widgets for minecrafts commands.")]),t._v(" "),a("p",[t._v("Construct a builder with an initial command:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" builder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommandBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'damage ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("target")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("amount")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Then you can call various methods appending an argument conditionally(if the input is null, nothing gets appended). All methods have in common the argument "),a("code",[t._v("prefix")]),t._v(" for adding something infront of the passed type, the argument "),a("code",[t._v("suffix")]),t._v(", added after and a list "),a("code",[t._v("also")]),t._v(" which is also appended seperated by spaces.")]),t._v(" "),a("p",[t._v("The following methods/types are supported: "),a("code",[t._v(".string, .number, .entity")]),t._v(" and "),a("code",[t._v(".location")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("builder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("damageType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("when")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tlocation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tthen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'at ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("location")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\totherwise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" by "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'by ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("by")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cause"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prefix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'from '")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v(".when")]),t._v(" is used when there are two possible ways the command could generate. When the condition is evaluated as true, "),a("code",[t._v("then")]),t._v(" is used, else "),a("code",[t._v("otherwise")]),t._v(". Both could also be "),a("code",[t._v("null")]),t._v(", thus nothing being appended.")]),t._v(" "),a("p",[t._v("In case you want to build strings/commands yourself, take a look at the source code for "),a("code",[t._v("Damage, Clone, Data, Effect, Ride, FillBiome ...")]),t._v(" (more will follow) to see CommandBuilder in use.")]),t._v(" "),a("h2",{attrs:{id:"group"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group"}},[t._v("#")]),t._v(" Group")]),t._v(" "),a("iframe",{staticStyle:{margin:"0 calc(50% - 280px)"},attrs:{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/egLIzL5i4wQ",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),t._v("\nThe group groups actions similar to for but has an option to prefix each action and encapsulate the content in a new file.\n"),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("prefix")]),t._v(" "),a("td",[t._v("a prefix type of String")])]),t._v(" "),a("tr",[a("td",[t._v("children")]),t._v(" "),a("td",[t._v("the underlying widgets")])]),t._v(" "),a("tr",[a("td",[t._v("[suffix]")]),t._v(" "),a("td",[t._v("a String that should be added at the end")])]),t._v(" "),a("tr",[a("td",[t._v("[filename]")]),t._v(" "),a("td",[t._v("the targeted filename(will be combined with an unique id)")])]),t._v(" "),a("tr",[a("td",[t._v("[groupMin]")]),t._v(" "),a("td",[t._v("the minimum amount of children to encapsulate(default = 3, set to -1 to disable)")])])])]),t._v(" "),a("p",[t._v("If the children length is larger or equal groupMin a new file is created in "),a("code",[t._v("/objD/")]),t._v("(the working directory for objectiveD) and executed.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Group")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tprefix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"execute as @e run "')])]),t._v("\n\tchildren"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'say 1'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'say 2'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'say 3'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tfilename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"asgroup"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tgroupMin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("h2",{attrs:{id:"gson"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gson"}},[t._v("#")]),t._v(" Gson")]),t._v(" "),a("p",[t._v("Minecrafts Data is stored in the nbt format. Each property in therefore encoded into key-value pairs(json format).\nAdditionally Minecraft introduced gson, which adds types.\nThe "),a("a",{attrs:{href:"https://pub.dev/packages/gson",target:"_blank",rel:"noopener noreferrer"}},[t._v("gson"),a("OutboundLink")],1),t._v(" package handles the encoding and decoding of Minecrafts format in objD and provides dart wrappers for the specific types.")]),t._v(" "),a("h3",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("p",[t._v("To decode you can use")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("gson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("decode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{...}"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("and to encode you can use")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("gson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("That means, when you need the gson string somewhere, you can input a Map or a List in to encode.\nFor most of the usecases the integrated Widgets to this automatically(Entity,Data,...) and generate valid gson out of the box.")]),t._v(" "),a("h3",{attrs:{id:"types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#types"}},[t._v("#")]),t._v(" Types")]),t._v(" "),a("p",[t._v("Additionally to the dart types String,int, double, Map and List gson adds some specific types:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Example")]),t._v(" "),a("th",[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v('"a"')]),t._v(" "),a("td",[t._v('"a"')])]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("0")])]),t._v(" "),a("tr",[a("td",[t._v("Map")]),t._v(" "),a("td",[t._v('{"a":"a"}')]),t._v(" "),a("td",[t._v('{a:"a"}')])]),t._v(" "),a("tr",[a("td",[t._v("List")]),t._v(" "),a("td",[t._v('["a"]')]),t._v(" "),a("td",[t._v('["a"]')])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Byte")]),t._v(" "),a("td",[t._v("Byte(20)")]),t._v(" "),a("td",[t._v("20b")])]),t._v(" "),a("tr",[a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("true")]),t._v(" "),a("td",[t._v("1b")])]),t._v(" "),a("tr",[a("td",[t._v("Float")]),t._v(" "),a("td",[t._v("Float(90)")]),t._v(" "),a("td",[t._v("90f")])]),t._v(" "),a("tr",[a("td",[t._v("Double")]),t._v(" "),a("td",[t._v("Double(0.75)")]),t._v(" "),a("td",[t._v("0.75d")])]),t._v(" "),a("tr",[a("td",[t._v("Short")]),t._v(" "),a("td",[t._v("Short(10)")]),t._v(" "),a("td",[t._v("10s")])]),t._v(" "),a("tr",[a("td",[t._v("Long")]),t._v(" "),a("td",[t._v("Long(10000)")]),t._v(" "),a("td",[t._v("10000l")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("For more information take a look at the Package at "),a("a",{attrs:{href:"https://pub.dev/packages/gson",target:"_blank",rel:"noopener noreferrer"}},[t._v("pub.dev/packages/gson"),a("OutboundLink")],1),t._v(" or visit the "),a("a",{attrs:{href:"https://pub.dev/packages/gson#-example-tab-",target:"_blank",rel:"noopener noreferrer"}},[t._v("example"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"entity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entity"}},[t._v("#")]),t._v(" Entity")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th",[t._v("arguments are optional")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("selector")]),t._v(" "),a("td",[t._v("the entity selector(e.g p,s,e or r)")])]),t._v(" "),a("tr",[a("td",[t._v("limit")]),t._v(" "),a("td",[t._v("number of matched entities")])]),t._v(" "),a("tr",[a("td",[t._v("tags")]),t._v(" "),a("td",[t._v("a List of Strings or Tags that the entity should have")])]),t._v(" "),a("tr",[a("td",[t._v("scores")]),t._v(" "),a("td",[t._v("a List of Score matches that the entity should match")])]),t._v(" "),a("tr",[a("td",[t._v("team")]),t._v(" "),a("td",[t._v("a Team the entity has to be part of")])]),t._v(" "),a("tr",[a("td",[t._v("type")]),t._v(" "),a("td",[a("a",{attrs:{href:""}},[t._v("EntityType")]),t._v(", id of the entity")])]),t._v(" "),a("tr",[a("td",[t._v("nbt")]),t._v(" "),a("td",[t._v("a Map of required nbt properties")])]),t._v(" "),a("tr",[a("td",[t._v("strNbt")]),t._v(" "),a("td",[t._v("option to override the nbt map with a String to support expressions like "),a("code",[t._v("1b")])])]),t._v(" "),a("tr",[a("td",[t._v("area")]),t._v(" "),a("td",[t._v("A Area where the entity should be")])]),t._v(" "),a("tr",[a("td",[t._v("distance")]),t._v(" "),a("td",[a("a",{attrs:{href:""}},[t._v("Range")]),t._v(" to the entity")])]),t._v(" "),a("tr",[a("td",[t._v("level")]),t._v(" "),a("td",[t._v("Range of experience levels")])]),t._v(" "),a("tr",[a("td",[t._v("gamemode")]),t._v(" "),a("td",[t._v("Gamemode type(e.g Gamemode.creative, Gamemode.survival)")])]),t._v(" "),a("tr",[a("td",[t._v("horizontalRotation")]),t._v(" "),a("td",[t._v("Range of the horizontal facing direction")])]),t._v(" "),a("tr",[a("td",[t._v("verticalRotation")]),t._v(" "),a("td",[t._v("Range of the vertical facing direction")])]),t._v(" "),a("tr",[a("td",[t._v("isRotated")]),t._v(" "),a("td",[t._v("a Rotation Object for testing a specific rotation")])]),t._v(" "),a("tr",[a("td",[t._v("playerName")]),t._v(" "),a("td",[t._v("a String if you prefer to use a playername instead of arguments")])]),t._v(" "),a("tr",[a("td",[t._v("predicate")]),t._v(" "),a("td",[t._v("a String that refers to a Predicate in the Datapack")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("Methods")])]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("sort")]),t._v(" "),a("td",[t._v("adds a sort attribute of type "),a("a",{attrs:{href:""}},[t._v("Sort")])])]),t._v(" "),a("tr",[a("td",[t._v("storeResult")]),t._v(" "),a("td",[t._v("Command, path, scale,datatype, useSuccess")])])])]),t._v(" "),a("p",[t._v("storeResult stores a result or success of a command in the nbt path of an entity.\n"),a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("storeResult")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'say hello'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Invisisble"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tscale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tdatatype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"byte"')])]),t._v("\n\tuseSuccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n⇒ execute store success entity "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Invisisble")]),t._v(" byte "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" run say hello\n")])])]),a("h3",{attrs:{id:"restactions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restactions"}},[t._v("#")]),t._v(" RestActions")]),t._v(" "),a("p",[t._v("RestActions behave like normal Methods/Widgets when used in the Widget tree. With it you can for Example use:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("method")]),t._v(" "),a("th",[t._v("function")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("kill")]),t._v(" "),a("td",[t._v("kills the entity")])]),t._v(" "),a("tr",[a("td",[t._v("raycast")]),t._v(" "),a("td",[t._v("sends out a raycast(take a look at the raycast docs)")])]),t._v(" "),a("tr",[a("td",[t._v("tp/teleport")]),t._v(" "),a("td",[t._v("teleports the entity to a certain location or another entity(ref teleport docs)")])]),t._v(" "),a("tr",[a("td",[t._v("give")]),t._v(" "),a("td",[t._v("gives an item to a player(ref Give docs)")])]),t._v(" "),a("tr",[a("td",[t._v("replaceitem")]),t._v(" "),a("td",[t._v("replaces a certain slot with an Item(ref ReplaceItem docs)")])]),t._v(" "),a("tr",[a("td",[t._v("particle")]),t._v(" "),a("td",[t._v("shows particles at the entitys position(ref Particle docs)")])]),t._v(" "),a("tr",[a("td",[t._v("crash")]),t._v(" "),a("td",[t._v("crashes a players client")])]),t._v(" "),a("tr",[a("td",[t._v("clear")]),t._v(" "),a("td",[t._v("clears the players inventory(ref Clear docs)")])]),t._v(" "),a("tr",[a("td",[t._v("tellraw")]),t._v(" "),a("td",[t._v("prints a message in the players chat(ref Tellraw docs)")])]),t._v(" "),a("tr",[a("td",[t._v("dataMerge")]),t._v(" "),a("td",[t._v("merges nbt data into the entity")])]),t._v(" "),a("tr",[a("td",[t._v("dataGet")]),t._v(" "),a("td",[t._v("uses execute to get nbt data from the entity")])]),t._v(" "),a("tr",[a("td",[t._v("dataRemove")]),t._v(" "),a("td",[t._v("removes the nbt data of a specific path")])]),t._v(" "),a("tr",[a("td",[t._v("dataModify")]),t._v(" "),a("td",[t._v("modifies the nbt data of the entity(ref Data Widget!)")])]),t._v(" "),a("tr",[a("td",[t._v("execute")]),t._v(" "),a("td",[t._v("uses the execute on the entity(as)")])]),t._v(" "),a("tr",[a("td",[t._v("exec")]),t._v(" "),a("td",[t._v("short for execute")])]),t._v(" "),a("tr",[a("td",[t._v("executeStrait")]),t._v(" "),a("td",[t._v("uses the execute on the entity(as) with StraitWidget")])]),t._v(" "),a("tr",[a("td",[t._v("execStrait")]),t._v(" "),a("td",[t._v("short for executeStrait")])]),t._v(" "),a("tr",[a("td",[t._v("asat")]),t._v(" "),a("td",[t._v("uses execute with the entity and their location")])]),t._v(" "),a("tr",[a("td",[t._v("asatStrait")]),t._v(" "),a("td",[t._v("asat with Strait")])]),t._v(" "),a("tr",[a("td",[t._v("as")]),t._v(" "),a("td",[t._v("uses execute as the entity")])]),t._v(" "),a("tr",[a("td",[t._v("asStrait")]),t._v(" "),a("td",[t._v("as with Strait")])]),t._v(" "),a("tr",[a("td",[t._v("at")]),t._v(" "),a("td",[t._v("uses execute with the entities location")])]),t._v(" "),a("tr",[a("td",[t._v("atStrait")]),t._v(" "),a("td",[t._v("at with Strait")])]),t._v(" "),a("tr",[a("td",[t._v("addTag")]),t._v(" "),a("td",[t._v("adds a Tag(String) to the entity(ref Tag docs)")])]),t._v(" "),a("tr",[a("td",[t._v("addTags")]),t._v(" "),a("td",[t._v("adds a List of Tags(String) to the entity")])]),t._v(" "),a("tr",[a("td",[t._v("removeTag")]),t._v(" "),a("td",[t._v("removes a certain Tag(String)")])]),t._v(" "),a("tr",[a("td",[t._v("removeTags")]),t._v(" "),a("td",[t._v("removes a List of Tags(String)")])]),t._v(" "),a("tr",[a("td",[t._v("joinTeam")]),t._v(" "),a("td",[t._v("entity joins the given team")])]),t._v(" "),a("tr",[a("td",[t._v("leaveTeam")]),t._v(" "),a("td",[t._v("entity leaves the current team")])]),t._v(" "),a("tr",[a("td",[t._v("forEach")]),t._v(" "),a("td",[t._v("executes for each given Entity that fulfills the selector a Function with a List of Widgets(see example)")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n⇒ kill "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v("\n")])])]),a("p",[t._v("However, you can as well use these Methods together with "),a("a",{attrs:{href:"/utils#straitwidget"}},[t._v("StraitWidget")]),t._v(" and add the "),a("code",[t._v(".queue()")]),t._v(" method to let objd automatically add the generated Widget to the Widget list.\nThis makes the code more readable.")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StraitWidget")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" widgets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("queue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\twidget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n⇒ kill "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v("\n⇒ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("h3",{attrs:{id:"sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[t._v("#")]),t._v(" Sort")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Sort")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Sort.random")])]),t._v(" "),a("tr",[a("td",[t._v("Sort.furthest")])]),t._v(" "),a("tr",[a("td",[t._v("Sort.nearest")])]),t._v(" "),a("tr",[a("td",[t._v("Sort.albitrary")])])])]),t._v(" "),a("h3",{attrs:{id:"range"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#range"}},[t._v("#")]),t._v(" Range")]),t._v(" "),a("p",[t._v("The Range class defines a range of values(e.g 3..10 in vanilla)")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Range")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("[to]")]),t._v(" "),a("td",[t._v("Number for the maximum range")])]),t._v(" "),a("tr",[a("td",[t._v("[from]")]),t._v(" "),a("td",[t._v("Number for the minimal range")])])])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Use Range.to to define less than and Range.from to define greater than.")]),t._v(" "),a("p",[t._v("Use Range.exact to get the exact Range(e.g 4)")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exact")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"entitytype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entitytype"}},[t._v("#")]),t._v(" EntityType")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("EntityType")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("String representation of the type")])])])]),t._v(" "),a("p",[t._v("There is also an EntityType for every type_id in minecraft with "),a("code",[t._v("Entities.[type_id]")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Say")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tselector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"e"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tlimit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\ttags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"second"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tscores"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("score1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tteam"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Team")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_team"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\ttype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("armor_stand"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tdistance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tarea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Area")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLocations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use null for a unlimited selection")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("glob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("glob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tlevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tgamemode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Gamemode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("creative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\thorizontalRotation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tverticalRotation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("random"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n⇒ say "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("scores"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("team"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("my_team"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("armor_stand"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("distance"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("dx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("dz"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("level"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gamemode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("creative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y_rotation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x_rotation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sort"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("random"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("specific constructors")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Entity.Selected(...)")]),t._v(" "),a("td",[t._v("creates an entity with @s")])]),t._v(" "),a("tr",[a("td",[t._v("Entity.Self(...)")]),t._v(" "),a("td",[t._v("Entity.Selected, but shorter")])]),t._v(" "),a("tr",[a("td",[t._v("Entity.Player(...)")]),t._v(" "),a("td",[t._v("creates an entity with @p")])]),t._v(" "),a("tr",[a("td",[t._v("Entity.PlayerName(String)")]),t._v(" "),a("td",[t._v("creates an entity with an implicit name")])]),t._v(" "),a("tr",[a("td",[t._v("Entity.All(...)")]),t._v(" "),a("td",[t._v("creates an entity with @a")])]),t._v(" "),a("tr",[a("td",[t._v("Entity.Random(...)")]),t._v(" "),a("td",[t._v("creates an entity with @r")])]),t._v(" "),a("tr",[a("td",[t._v("Entity.Select(Selector)")]),t._v(" "),a("td",[t._v("takes in a Selector to select the Entity")])]),t._v(" "),a("tr",[a("td",[t._v("Entity.Marker(...)")]),t._v(" "),a("td",[t._v("selects entities of type Marker: @e[type=minecraft:marker]")])]),t._v(" "),a("tr",[a("td",[t._v("Entity.clone(Entity)")]),t._v(" "),a("td",[t._v("creates a new instance of an already existing Entity object")])])])]),t._v(" "),a("h3",{attrs:{id:"entity-not"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entity-not"}},[t._v("#")]),t._v(" Entity.not")]),t._v(" "),a("p",[t._v("With the not function you can negate specific arguments. It takes in the same options as "),a("code",[t._v("Entity()")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Say")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("not")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mytag"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nbt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"istrue"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ say "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("mytag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nbt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"istrue"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"entity-copywith"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entity-copywith"}},[t._v("#")]),t._v(" Entity.copyWith")]),t._v(" "),a("p",[t._v("Creates a new Entity based on the existing one and applies new arguments. (same as constructors)")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity")]),t._v(" ent1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sheep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity")]),t._v(" ent2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ent1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("distance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"entity-setvalues"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entity-setvalues"}},[t._v("#")]),t._v(" Entity.setValues")]),t._v(" "),a("p",[t._v("Modifies the properties of the existing Entity and applies new arguments(same as constructors)")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity")]),t._v(" ent1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entities")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sheep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nent1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setValues")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("distance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("sheep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("distance"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[t._v("#")]),t._v(" Tag")]),t._v(" "),a("iframe",{staticStyle:{margin:"0 calc(50% - 280px)"},attrs:{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/082d9Jb9eOc",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),t._v(" "),a("p",[t._v("A tag saves a boolean value with an entity inside the game.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("the name of the tag")])]),t._v(" "),a("tr",[a("td",[t._v("entity")]),t._v(" "),a("td",[t._v("the entity you that want to assign a tag to")])]),t._v(" "),a("tr",[a("td",[t._v("value")]),t._v(" "),a("td",[t._v("the boolean value(default true)")])])])]),t._v(" "),a("p",[t._v("As a clearer way, you can also use "),a("code",[t._v("Tag.add(...)")]),t._v(" or "),a("code",[t._v("Tag.remove(...)")]),t._v(" making your code more readable.")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"firstTag"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Player")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ tag "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@p")]),t._v(" add firstTag\n")])])]),a("p",[t._v("There is also the add or remove method for changing a variable:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tag")]),t._v(" mytag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"firstTag"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Player")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in generate")]),t._v("\nmytag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nmytag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n⇒ tag "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@p")]),t._v(" add firstTag\n⇒ tag "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@p")]),t._v(" remove firstTag\n")])])]),a("p",[t._v("Also consider the addTag method on an entity.")]),t._v(" "),a("h3",{attrs:{id:"toggle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#toggle"}},[t._v("#")]),t._v(" toggle")]),t._v(" "),a("p",[t._v("With the toggle method you can toggle the value(invert the tag). This is done with a temporary tag:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mytag"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toggle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ execute "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" entity "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mytag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" run tag "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" add objd_temp\n⇒ execute "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" entity "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("objd_temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" run tag "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" remove mytag\n⇒ execute "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" entity "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("objd_temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" run tag "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" add mytag\n⇒ tag "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" remove objd_temp\n")])])]),a("h3",{attrs:{id:"removeifexists"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#removeifexists"}},[t._v("#")]),t._v(" removeIfExists")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("removeIfExists")]),t._v(" method removes the tag and may execute some action before if the tag exists.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mytag"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("entity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeIfExists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tthen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Say")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"removed"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// optional argument")]),t._v("\n⇒ execute "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" entity "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mytag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" run say removed\n⇒ execute "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" entity "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mytag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" run tag "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" remove mytag\n")])])]),a("h3",{attrs:{id:"operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#operators"}},[t._v("#")]),t._v(" Operators")]),t._v(" "),a("p",[t._v("You can use Operators to use Conditions and Assignments of new values faster.")]),t._v(" "),a("p",[t._v("** >> **")]),t._v(" "),a("p",[t._v("Assignes a new boolean value to the Tag(removes or adds the tag).")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t⇒ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tag "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" add test\n")])])]),a("p",[t._v("** & **")]),t._v(" "),a("p",[t._v("Checks if the Tag is a certain value and returns a Condition to use in If.")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("If")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tthen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t⇒ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("execute "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" entity "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("h3",{attrs:{id:"prefixes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prefixes"}},[t._v("#")]),t._v(" Prefixes")]),t._v(" "),a("p",[t._v("Often you find yourself giving all tags a prefix espacially for your project. This can get very repetitive and anoying, so objD has this prefix built in.\nJust assign the wanted prefix to the Tag.prefix constant and most tags(initiated with Tag, Entity and Summon) will be converted:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prefix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stevertus_"')])]),t._v("\n")])])]),a("h2",{attrs:{id:"scoreboard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scoreboard"}},[t._v("#")]),t._v(" Scoreboard")]),t._v(" "),a("iframe",{staticStyle:{margin:"0 calc(50% - 280px)"},attrs:{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/WCzHHjScj28",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),t._v(" "),a("p",[t._v("A scoreboard objective holds values, kind a like a Variable inside Minecraft. The Scoreboard class just handles adding or removing objectives. The value assignment is handled by the Score class.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("name of the objective(required)")])]),t._v(" "),a("tr",[a("td",[t._v("type")]),t._v(" "),a("td",[t._v("the objective type (default = dummy)")])]),t._v(" "),a("tr",[a("td",[t._v("display")]),t._v(" "),a("td",[t._v("TextComponent that displays the name")])]),t._v(" "),a("tr",[a("td",[t._v("addIntoLoad")]),t._v(" "),a("td",[t._v("bool whether the scoreboard should be added into your load file(default = true)")])])])]),t._v(" "),a("p",[t._v("objD automatically keeps a list of all scoreboards and inserts them into the given load file, ignoring doubled names.\n"),a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scoreboard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"death_count"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\ttype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deathCount"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tdisplay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TextComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is how many deaths you have:"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\taddIntoLoad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scoreboard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"death_count"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// load.mcfunction:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("scoreboard objectives add death_count deathCount "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is how many deaths you have:"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v('So the second scoreboard was not added because one "death_count" already existed.')]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("Scoreboard.add")]),t._v(" constructor does exactly the same but puts the result without checking in the current file.")]),t._v(" "),a("p",[a("code",[t._v("Scoreboard.remove")]),t._v(" removes an objective by its name again.")]),t._v(" "),a("p",[t._v("With "),a("code",[t._v("Scoreboard.setdisplay")]),t._v(" you can display the values:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Scoreboard.setdisplay")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("name of the objective(required)")])]),t._v(" "),a("tr",[a("td",[t._v("display")]),t._v(" "),a("td",[t._v("String for display location (default = sidebar)")])])])]),t._v(" "),a("p",[a("code",[t._v("Scoreboard.modify")]),t._v(" can change the rendertype to use hearts after its creation")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Scoreboard.modify")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("name of the objective(required)")])]),t._v(" "),a("tr",[a("td",[t._v("useHearts")]),t._v(" "),a("td",[t._v("bool (default = false)")])])])]),t._v(" "),a("h3",{attrs:{id:"prefixes-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prefixes-2"}},[t._v("#")]),t._v(" Prefixes")]),t._v(" "),a("p",[t._v("Often you find yourself giving all scoreboards a prefix espacially for your project. This can get very repetitive and anoying, so objD has this prefix built in.\nJust assign the wanted prefix to the Scoreboard.prefix constant and all your scores will be converted:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scoreboard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prefix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stevertus_"')])]),t._v("\n")])])]),a("h3",{attrs:{id:"accessing-the-scores"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accessing-the-scores"}},[t._v("#")]),t._v(" Accessing the Scores")]),t._v(" "),a("p",[t._v("A Scoreboard implements the operator []. With this operator you can retrieve a score quickly from its scoreboard by passing either an Entity or a String representing a player name(or fake name):")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" board "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scoreboard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" score1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" board"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" score2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" board"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#some_constant"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("For quick access to the most common ones you can also use "),a("code",[t._v("board.self")]),t._v(", "),a("code",[t._v("board.all")]),t._v(" or "),a("code",[t._v("board.player")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" score3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" board"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("player"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"score"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#score"}},[t._v("#")]),t._v(" Score")]),t._v(" "),a("iframe",{staticStyle:{margin:"0 calc(50% - 280px)"},attrs:{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/WCzHHjScj28",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),t._v(" "),a("p",[t._v("The score class is the basis for setting values, calculating with scores and checking the values.\nIt implements one base class with no functionality and several methods to do actions:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Entity")]),t._v(" "),a("td",[t._v("the entity within the scoreboard")])]),t._v(" "),a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("the name of the objective")])]),t._v(" "),a("tr",[a("td",[t._v("addNew")]),t._v(" "),a("td",[t._v("bool whether it should add the scoreboard itself if it does not exist(default = true)")])]),t._v(" "),a("tr",[a("td",[t._v("type")]),t._v(" "),a("td",[t._v("type of generated Scoreboard(default = dummy, only if addNew)")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("With the addNew property it is not required to add a scoreboard before!")])]),t._v(" "),a("h4",{attrs:{id:"calculations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#calculations"}},[t._v("#")]),t._v(" Calculations")]),t._v(" "),a("p",[t._v("These methods can be used to set or calculate the value:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("name")]),t._v(" "),a("th",[t._v("arguments")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("set")]),t._v(" "),a("td",[t._v("int")])]),t._v(" "),a("tr",[a("td",[t._v("reset")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("add")]),t._v(" "),a("td",[t._v("int")])]),t._v(" "),a("tr",[a("td",[t._v("subtract")]),t._v(" "),a("td",[t._v("int")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[a("strong",[t._v("The following compare another Score")])])]),t._v(" "),a("tr",[a("td",[t._v("setEqual")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("swapWith")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("setToSmallest")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("setToBiggest")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("addScore")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("subtractScore")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("multiplyByScore")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("divideByScore")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("modulo")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("setToData")]),t._v(" "),a("td",[t._v("Data")])]),t._v(" "),a("tr",[a("td",[t._v("setToResult")]),t._v(" "),a("td",[t._v("Command,useSuccess(bool)")])]),t._v(" "),a("tr",[a("td",[t._v("setToWidget")]),t._v(" "),a("td",[t._v("Widget,useSuccess(bool) (⇒ CAUTION make sure your Widget just generates one Command)")])]),t._v(" "),a("tr",[a("td",[t._v("setToCondition")]),t._v(" "),a("td",[t._v("Condition,useSuccess(bool)")])]),t._v(" "),a("tr",[a("td",[t._v("findSmallest")]),t._v(" "),a("td",[t._v("List<Score>,min (⇒ finds the smallest value in a list of scores)")])]),t._v(" "),a("tr",[a("td",[t._v("findBiggest")]),t._v(" "),a("td",[t._v("List<Score>,max (⇒ finds the biggest value in a list of scores)")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("All of these methods return a new instance of Score with the calculations applied.\nSo you can also chain single calculations or use multiple on one base Score.")])]),t._v(" "),a("p",[a("strong",[t._v("Examples:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// defining scores variables inside the widget")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),t._v(" base "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"score"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("addNew"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),t._v(" another "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"score2"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... in the generate method:")]),t._v("\nbase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ scoreboard players "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n⇒ scoreboard players add "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n⇒ scoreboard players remove "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n⇒ scoreboard players reset "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score\n\nbase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEqual")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("another"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("swapWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("another"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToBiggest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("another"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2\n\nanother"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addScore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("divideByScore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("modulo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score\n\n\n\nbase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~ ~ ~"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Items[0].Count"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ execute store result score "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score run data "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" block "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// using success instead of result")]),t._v("\nbase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToResult")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"say hi"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("useSuccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ execute store success score "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score run say hi\n")])])]),a("h4",{attrs:{id:"conditions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conditions"}},[t._v("#")]),t._v(" Conditions")]),t._v(" "),a("p",[t._v("These methods can be used for example with if to match values:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("name")]),t._v(" "),a("th",[t._v("arguments")]),t._v(" "),a("th",[t._v("example Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("matches")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("@s score matches 5")])]),t._v(" "),a("tr",[a("td",[t._v("matchesRange")]),t._v(" "),a("td",[t._v("Range")]),t._v(" "),a("td",[t._v("@s score matches 0..20")])]),t._v(" "),a("tr",[a("td",[t._v("isEqual")]),t._v(" "),a("td",[t._v("Score")]),t._v(" "),a("td",[t._v("@s score = @s score2")])]),t._v(" "),a("tr",[a("td",[t._v("isSmaller")]),t._v(" "),a("td",[t._v("Score")]),t._v(" "),a("td",[t._v("@s score < @s score2")])]),t._v(" "),a("tr",[a("td",[t._v("isSmallerOrEqual")]),t._v(" "),a("td",[t._v("Score")]),t._v(" "),a("td",[t._v("@s score <= @s score2")])]),t._v(" "),a("tr",[a("td",[t._v("isBigger")]),t._v(" "),a("td",[t._v("Score")]),t._v(" "),a("td",[t._v("@s score > @s score2")])]),t._v(" "),a("tr",[a("td",[t._v("isBiggerOrEqual")]),t._v(" "),a("td",[t._v("Score")]),t._v(" "),a("td",[t._v("@s score >= @s score2")])])])]),t._v(" "),a("h3",{attrs:{id:"operators-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#operators-2"}},[t._v("#")]),t._v(" Operators")]),t._v(" "),a("p",[t._v("Operators are a way to make the common used methods easier and more accessible. You can use the operators(+,-,/,*...) like you would with numbers or strings. The Score Widget detects the type automatically and returns the matching methods.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Operator")]),t._v(" "),a("th",[t._v("available Types")]),t._v(" "),a("th",[t._v("equivilant to")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v(">>")]),t._v(" "),a("td",[t._v("int, Score, Data.get, Condition")]),t._v(" "),a("td",[t._v("score.set(int)")])]),t._v(" "),a("tr",[a("td",[t._v("+")]),t._v(" "),a("td",[t._v("int, Score")]),t._v(" "),a("td",[t._v("score.add(int)")])]),t._v(" "),a("tr",[a("td",[t._v("-")]),t._v(" "),a("td",[t._v("int, Score")]),t._v(" "),a("td",[t._v("score.substract(int)")])]),t._v(" "),a("tr",[a("td",[t._v("%")]),t._v(" "),a("td",[t._v("int, Score")]),t._v(" "),a("td",[t._v("score.modulo(score2)")])]),t._v(" "),a("tr",[a("td",[t._v("/")]),t._v(" "),a("td",[t._v("int, Score")]),t._v(" "),a("td",[t._v("score.divideByScore(score2)")])]),t._v(" "),a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[t._v("int, Score")]),t._v(" "),a("td",[t._v("score.multiplyByScore(score2)")])]),t._v(" "),a("tr",[a("td",[t._v("Conditions")]),t._v(" "),a("td",[t._v("used in If")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("&")]),t._v(" "),a("td",[t._v("int,Score,Range")]),t._v(" "),a("td",[t._v("score.matches(int)")])]),t._v(" "),a("tr",[a("td",[t._v(">")]),t._v(" "),a("td",[t._v("int, Score")]),t._v(" "),a("td",[t._v("score.isBigger(score2)")])]),t._v(" "),a("tr",[a("td",[t._v("<")]),t._v(" "),a("td",[t._v("int, Score")]),t._v(" "),a("td",[t._v("score.isSmaller(score2)")])]),t._v(" "),a("tr",[a("td",[t._v(">=")]),t._v(" "),a("td",[t._v("int, Score")]),t._v(" "),a("td",[t._v("score.isBiggerOrEqual(score2)")])]),t._v(" "),a("tr",[a("td",[t._v("<=")]),t._v(" "),a("td",[t._v("int, Score")]),t._v(" "),a("td",[t._v("score.isSmallerOrEqual(score2)")])])])]),t._v(" "),a("h3",{attrs:{id:"constant-score"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constant-score"}},[t._v("#")]),t._v(" Constant Score")]),t._v(" "),a("p",[t._v("Do you need constant values with scores? objD got you covered with "),a("code",[t._v("Score.con")]),t._v(":")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Score.con")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("a constant number")])]),t._v(" "),a("tr",[a("td",[t._v("addNew")]),t._v(" "),a("td",[t._v("bool whether it should add objd_consts itself if it does not exist(default = true)")])])])]),t._v(" "),a("p",[t._v("This will automatically create a scoreboard called "),a("code",[t._v("objd_consts")]),t._v(" and set the value to the fake entity "),a("code",[t._v("#[value]")]),t._v(" "),a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("con")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ scoreboard players "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" #"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" objd_consts "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),a("h3",{attrs:{id:"selected-score"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#selected-score"}},[t._v("#")]),t._v(" Selected Score")]),t._v(" "),a("p",[t._v("Often times you want the score of a selected Entity(@s). Score.fromSelected is the same as Score but has a predefined entity.\n"),a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromSelected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"objective"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ scoreboard players "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" objective "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("p",[t._v("The score class is the basis for setting values, calculating with scores and checking the values.\nIt implements one base class with no functionality and several methods to do actions:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Entity")]),t._v(" "),a("td",[t._v("the entity within the scoreboard")])]),t._v(" "),a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("the name of the objective")])]),t._v(" "),a("tr",[a("td",[t._v("addNew")]),t._v(" "),a("td",[t._v("bool whether it should add the scoreboard itself if it does not exist(default = true)")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("With the addNew property it is not required to add a scoreboard before!")])]),t._v(" "),a("h4",{attrs:{id:"calculations-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#calculations-2"}},[t._v("#")]),t._v(" Calculations")]),t._v(" "),a("p",[t._v("These methods can be used to set or calculate the value:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("name")]),t._v(" "),a("th",[t._v("arguments")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("set")]),t._v(" "),a("td",[t._v("int")])]),t._v(" "),a("tr",[a("td",[t._v("reset")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("add")]),t._v(" "),a("td",[t._v("int")])]),t._v(" "),a("tr",[a("td",[t._v("subtract")]),t._v(" "),a("td",[t._v("int")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[a("strong",[t._v("The following compare another Score")])])]),t._v(" "),a("tr",[a("td",[t._v("setEqual")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("swapWith")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("setToSmallest")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("setToBiggest")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("addScore")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("subtractScore")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("multiplyByScore")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("divideByScore")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("modulo")]),t._v(" "),a("td",[t._v("Score")])]),t._v(" "),a("tr",[a("td",[t._v("setToData")]),t._v(" "),a("td",[t._v("Data")])]),t._v(" "),a("tr",[a("td",[t._v("setToResult")]),t._v(" "),a("td",[t._v("Command,useSuccess(bool)")])]),t._v(" "),a("tr",[a("td",[t._v("findSmallest")]),t._v(" "),a("td",[t._v("List<Score>,min (⇒ finds the smallest value in a list of scores)")])]),t._v(" "),a("tr",[a("td",[t._v("findBiggest")]),t._v(" "),a("td",[t._v("List<Score>,max (⇒ finds the biggest value in a list of scores)")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("All of these methods return a new instance of Score with the calculations applied.\nSo you can also chain single calculations or use multiple on one base Score.")])]),t._v(" "),a("p",[a("strong",[t._v("Examples:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// defining scores variables inside the widget")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),t._v(" base "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"score"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("addNew"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),t._v(" another "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"score2"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... in the generate method:")]),t._v("\nbase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subtract")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ scoreboard players "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n⇒ scoreboard players add "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n⇒ scoreboard players remove "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n⇒ scoreboard players reset "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score\n\nbase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEqual")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("another"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("swapWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("another"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToBiggest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("another"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2\n\nanother"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addScore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("divideByScore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("modulo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score\n⇒ scoreboard players operation "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score\n\n\n\nbase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~ ~ ~"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Items[0].Count"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ execute store result score "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score run data "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" block "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Count "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// using success instead of result")]),t._v("\nbase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToResult")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"say hi"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("useSuccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ execute store success score "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" score run say hi\n")])])]),a("h4",{attrs:{id:"conditions-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conditions-2"}},[t._v("#")]),t._v(" Conditions")]),t._v(" "),a("p",[t._v("These methods can be used for example with if to match values:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("name")]),t._v(" "),a("th",[t._v("arguments")]),t._v(" "),a("th",[t._v("example Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("matches")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("@s score matches 5")])]),t._v(" "),a("tr",[a("td",[t._v("matchesRange")]),t._v(" "),a("td",[t._v("Range")]),t._v(" "),a("td",[t._v("@s score matches 0..20")])]),t._v(" "),a("tr",[a("td",[t._v("isEqual")]),t._v(" "),a("td",[t._v("Score")]),t._v(" "),a("td",[t._v("@s score = @s score2")])]),t._v(" "),a("tr",[a("td",[t._v("isSmaller")]),t._v(" "),a("td",[t._v("Score")]),t._v(" "),a("td",[t._v("@s score < @s score2")])]),t._v(" "),a("tr",[a("td",[t._v("isSmallerOrEqual")]),t._v(" "),a("td",[t._v("Score")]),t._v(" "),a("td",[t._v("@s score <= @s score2")])]),t._v(" "),a("tr",[a("td",[t._v("isBigger")]),t._v(" "),a("td",[t._v("Score")]),t._v(" "),a("td",[t._v("@s score > @s score2")])]),t._v(" "),a("tr",[a("td",[t._v("isBiggerOrEqual")]),t._v(" "),a("td",[t._v("Score")]),t._v(" "),a("td",[t._v("@s score >= @s score2")])])])]),t._v(" "),a("h3",{attrs:{id:"constant-score-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constant-score-2"}},[t._v("#")]),t._v(" Constant Score")]),t._v(" "),a("p",[t._v("Do you need constant values with scores? objD got you covered with "),a("code",[t._v("Score.con")]),t._v(":")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Score.con")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("a constant number")])]),t._v(" "),a("tr",[a("td",[t._v("addNew")]),t._v(" "),a("td",[t._v("bool whether it should add objd_consts itself if it does not exist(default = true)")])])])]),t._v(" "),a("p",[t._v("This will automatically create a scoreboard called "),a("code",[t._v("objd_consts")]),t._v(" and set the value to the fake entity "),a("code",[t._v("#[value]")]),t._v(" "),a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("con")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ scoreboard players "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" #"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" objd_consts "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),a("h3",{attrs:{id:"selected-score-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#selected-score-2"}},[t._v("#")]),t._v(" Selected Score")]),t._v(" "),a("p",[t._v("Often times you want the score of a selected Entity(@s). Score.fromSelected is the same as Score but has a predefined entity.\n"),a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromSelected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"objective"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ scoreboard players "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" objective "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("h2",{attrs:{id:"block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#block"}},[t._v("#")]),t._v(" Block")]),t._v(" "),a("p",[t._v("There is also a util class called Block which provides a wrapper for all available blocks in Minecraft.\n"),a("strong",[t._v("Usage:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Block")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("minecraft_block_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// as string or")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Blocks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("minecraft_block_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("All ids can be found "),a("a",{attrs:{href:"https://minecraft.gamepedia.com/Block#List_of_blocks",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".\nBut you can also insert a block by its string:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("the minecraft block id")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SetBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Blocks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tlocation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("here")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("You can also use Blocks.all to get a List of all the block from the latest minecraft version and Blocks.snapshot to get the new blocks in the next version.")]),t._v(" "),a("h3",{attrs:{id:"block-nbt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#block-nbt"}},[t._v("#")]),t._v(" Block.nbt")]),t._v(" "),a("p",[t._v("This is a special function that creates a block with the option to add nbt data and blockstates.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Block.nbt")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Block or String")]),t._v(" "),a("td",[t._v("the Block type")])]),t._v(" "),a("tr",[a("td",[t._v("states")]),t._v(" "),a("td",[t._v('a Map of Blockstates(e.g {"left":true}, optional)')])]),t._v(" "),a("tr",[a("td",[t._v("nbt")]),t._v(" "),a("td",[t._v("Nbt in form of a Dart Map(optional)")])]),t._v(" "),a("tr",[a("td",[t._v("strNbt")]),t._v(" "),a("td",[t._v("Nbt in a pure String format, allows for 1b etc(optional)")])])])]),t._v(" "),a("p",[t._v("With this function you can fully configure your blocks.")]),t._v(" "),a("h2",{attrs:{id:"biome"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#biome"}},[t._v("#")]),t._v(" Biome")]),t._v(" "),a("p",[t._v("A wrapper for all biomes in minecraft.\n"),a("strong",[t._v("Usage:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Block")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("biome_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// as string or")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Biomes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("biome_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("You can also insert a custom biome by providing a string:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("the minecraft block id")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("If")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Biomes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("desert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tthen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Say")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'In desert!'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"location"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#location"}},[t._v("#")]),t._v(" Location")]),t._v(" "),a("p",[t._v("In the block example we already used a class called Location. This translates into Minecraft Coordinates.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v('the minecraft coordinate string(e.g "~ ~ ~")')])])])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SetBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Blocks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~ 5 ~"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v('There is also a shortcut for " ~ ~ ~ ":')]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Location.here")]),t._v(" "),a("th",[t._v("Selects the current Position")])])]),t._v(" "),a("tbody")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("here")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("\n")])])]),a("p",[t._v("But the Location class also provides a wrapper for global coordinates:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Location.glob")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("x")]),t._v(" "),a("td",[t._v("a double defining the absolute x coordinate")])]),t._v(" "),a("tr",[a("td",[t._v("y")]),t._v(" "),a("td",[t._v("a double defining the absolute y coordinate")])]),t._v(" "),a("tr",[a("td",[t._v("z")]),t._v(" "),a("td",[t._v("a double defining the absolute z coordinate")])])])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("glob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("51.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("784.20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("51.5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("784.2")]),t._v("\n")])])]),a("p",[t._v("And also for relative coordinates:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Location.rel")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("x")]),t._v(" "),a("td",[t._v("a double defining the relative x coordinate")])]),t._v(" "),a("tr",[a("td",[t._v("y")]),t._v(" "),a("td",[t._v("a double defining the relative y coordinate")])]),t._v(" "),a("tr",[a("td",[t._v("z")]),t._v(" "),a("td",[t._v("a double defining the relative z coordinate")])])])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("\n")])])]),a("p",[t._v("And local coordinates(depends on the rotation of the head):")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Location.local")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("x")]),t._v(" "),a("td",[t._v("a double defining the local x coordinate")])]),t._v(" "),a("tr",[a("td",[t._v("y")]),t._v(" "),a("td",[t._v("a double defining the local y coordinate")])]),t._v(" "),a("tr",[a("td",[t._v("z")]),t._v(" "),a("td",[t._v("a double defining the local z coordinate")])])])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("local")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.5")]),t._v("\n")])])]),a("p",[t._v("To clone a Location use Location.clone:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Location.clone")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Location")]),t._v(" "),a("td",[t._v("the source location")])])])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("\n")])])]),a("p",[t._v("There is also a method for a location:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("methods")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("storeResult")]),t._v(" "),a("td",[t._v("Command, path, scale, datatype, useSuccess")])])])]),t._v(" "),a("p",[t._v("This stores a result or success of a command in the nbt path of a location.\n"),a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("here")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("storeResult")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'say hello'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Items[0].tag.command"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tuseSuccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tscale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tdatatype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"byte"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n⇒ execute store success block "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("command "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" byte run say hello\n")])])]),a("h2",{attrs:{id:"area"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#area"}},[t._v("#")]),t._v(" Area")]),t._v(" "),a("p",[t._v("The Area class provides a way to select a three dimensional space between some locations.\nTherefore it automatically builds the lowest and highest coordinates and calculates the distances.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th",[t._v("doubles")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("x1")]),t._v(" "),a("td",[t._v("one x corner")])]),t._v(" "),a("tr",[a("td",[t._v("y1")]),t._v(" "),a("td",[t._v("one y corner")])]),t._v(" "),a("tr",[a("td",[t._v("z1")]),t._v(" "),a("td",[t._v("one z corner")])]),t._v(" "),a("tr",[a("td",[t._v("x2")]),t._v(" "),a("td",[t._v("second x corner")])]),t._v(" "),a("tr",[a("td",[t._v("y2")]),t._v(" "),a("td",[t._v("second x corner")])]),t._v(" "),a("tr",[a("td",[t._v("z2")]),t._v(" "),a("td",[t._v("second x corner")])])])]),t._v(" "),a("p",[t._v("This is especially useful for "),a("code",[t._v("if blocks")]),t._v(", Fill and Clone.")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Area")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.75")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.75")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("h3",{attrs:{id:"area-rel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#area-rel"}},[t._v("#")]),t._v(" Area.rel")]),t._v(" "),a("p",[t._v("Use Area.rel if you want to select the area relative to an unknown position.")]),t._v(" "),a("h3",{attrs:{id:"area-fromlocations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#area-fromlocations"}},[t._v("#")]),t._v(" Area.fromLocations")]),t._v(" "),a("p",[t._v("But if you would also like local or relative coordinates, you can always pass the locations directly:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Area.fromLocations")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Location")]),t._v(" "),a("td",[t._v("location 1")])]),t._v(" "),a("tr",[a("td",[t._v("Location")]),t._v(" "),a("td",[t._v("location 2")])])])]),t._v(" "),a("h3",{attrs:{id:"area-fromranges"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#area-fromranges"}},[t._v("#")]),t._v(" Area.fromRanges")]),t._v(" "),a("p",[t._v("There is as well a constructor to construct an Area within a defined Range of a Location(Works like fill or clone).")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Area.fromRanges")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("x")]),t._v(" "),a("td",[t._v("original location")])]),t._v(" "),a("tr",[a("td",[t._v("y")]),t._v(" "),a("td",[t._v("original location")])]),t._v(" "),a("tr",[a("td",[t._v("z")]),t._v(" "),a("td",[t._v("original location")])]),t._v(" "),a("tr",[a("td",[t._v("dx")]),t._v(" "),a("td",[t._v("distance to next location")])]),t._v(" "),a("tr",[a("td",[t._v("dy")]),t._v(" "),a("td",[t._v("distance to next location")])]),t._v(" "),a("tr",[a("td",[t._v("dz")]),t._v(" "),a("td",[t._v("distance to next location")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")]),t._v("\nˋˋˋdart\nArea.fromRanges(\nx: 10,\ny: 64,\nz: 10,\ndx: 10,\ndy: 10,\ndz: 10\n)\n==> 10 64 10 20 74 20\nˋˋˋ")]),t._v(" "),a("h2",{attrs:{id:"rotation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rotation"}},[t._v("#")]),t._v(" Rotation")]),t._v(" "),a("p",[t._v("The Rotation class is very similar to Location but takes in just two directions for an entities rotation:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v('the minecraft coordinate string(e.g "~ ~")')])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Rotation.glob")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("x")]),t._v(" "),a("td",[t._v("int representing global x orientation")])]),t._v(" "),a("tr",[a("td",[t._v("y")]),t._v(" "),a("td",[t._v("int representing global y orientation")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Rotation.rel")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("x")]),t._v(" "),a("td",[t._v("int representing rotation relative to the current x orientation")])]),t._v(" "),a("tr",[a("td",[t._v("y")]),t._v(" "),a("td",[t._v("int representing rotation relative to the current y orientation")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rotation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Execute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rotated")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rotation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("glob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tp @s ^ ^ ^10"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ execute rotated "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" run command tp "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])])]),a("h3",{attrs:{id:"predefined-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#predefined-values"}},[t._v("#")]),t._v(" Predefined Values")]),t._v(" "),a("p",[t._v("The Rotation object has some common values. These mainly include all the directions(north, west, south, east):")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rotation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("n ⇒ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rotation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("s ⇒ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rotation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("e ⇒ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rotation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("w ⇒ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("\n")])])]),a("p",[t._v("You can also generate a Rotation object directly:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rotation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("north")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \t\t⇒ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rotation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("east")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \t⇒ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rotation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("south")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  ⇒  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[t._v("Here you can also specify the y-value and an additional difference in x.")]),t._v(" "),a("blockquote",[a("p",[t._v("Tip: You can also use "),a("code",[t._v("Rotation.checkNorth(), Rotation.checkEast()...")]),t._v(" to get a range testing specific rotations used in entities")])]),t._v(" "),a("h3",{attrs:{id:"get-direction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-direction"}},[t._v("#")]),t._v(" Get Direction")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("getDirection")]),t._v(" method allows you to extract a direction from the x value of a Rotation. This can be used in Blockstates for example.\nAll the direction are rounded to 90° steps.")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myrot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rotation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("global")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("56")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmyrot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDirection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ⇒ "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"west"')])]),t._v("\n")])])]),a("h2",{attrs:{id:"data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[t._v("#")]),t._v(" Data")]),t._v(" "),a("iframe",{staticStyle:{margin:"0 calc(50% - 280px)"},attrs:{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/06IiFVCs1x4",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),t._v(" "),a("p",[t._v("The Data Widgets allows you to edit nbt data of Entities or Blocks.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("dynamic")]),t._v(" "),a("td",[t._v("The target Entity, Block or Storage which you want to modify")])]),t._v(" "),a("tr",[a("td",[t._v("nbt")]),t._v(" "),a("td",[t._v("A Dart Map containing new nbt data")])]),t._v(" "),a("tr",[a("td",[t._v("strNbt")]),t._v(" "),a("td",[t._v("option to override the nbt map with a String to support expressions like "),a("code",[t._v("1b")])])]),t._v(" "),a("tr",[a("td",[t._v("type")]),t._v(" "),a("td",[t._v("A String defining the operation type(default=merge)")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tnbt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Invisible"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NoGravity"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ data merge entity "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Invisible"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NoGravity"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("There are also subconstructors for each operation type("),a("code",[t._v("Data.merge, Data.get, Data.remove")]),t._v(")")])]),t._v(" "),a("h3",{attrs:{id:"datamodify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datamodify"}},[t._v("#")]),t._v(" DataModify")]),t._v(" "),a("p",[t._v("And the modify operation is also available, yet a bit more complex:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Data.modify")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("dynamic")]),t._v(" "),a("td",[t._v("The target Entity OR Location which you want to modify")])]),t._v(" "),a("tr",[a("td",[t._v("path")]),t._v(" "),a("td",[t._v("the nbt path you want to modify")])]),t._v(" "),a("tr",[a("td",[t._v("modify")]),t._v(" "),a("td",[t._v("A DataModify object defining which parameters you want to modify")])])])]),t._v(" "),a("p",[t._v("So this is split up into a seperate class:")]),t._v(" "),a("p",[t._v("There are five sub operations again: set, merge, prepend, append and insert.\nAll follow this constructor rules:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("DataModify")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("dynamic")]),t._v(" "),a("td",[t._v("The source of the modification. Can be a Map, String, Number, Entity or Location")])]),t._v(" "),a("tr",[a("td",[t._v("fromPath")]),t._v(" "),a("td",[t._v("optional path for the Entity or Location source from where to read the data")])])])]),t._v(" "),a("p",[t._v("So we can for Example use")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("modify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_Custom_Path"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tmodify"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataModify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hey"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// or {"nbt":"here"} or 56')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ data modify "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" my_Custom_Path "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hey"')])]),t._v("\n")])])]),a("p",[t._v("Or")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("modify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_Custom_Path2"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tmodify"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataModify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or Location... to get data from a block")]),t._v("\n\t\tindex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// insert also needs an additional index")]),t._v("\n\t\tfromPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_Custom_Path"')])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this just copies one property to another")]),t._v("\n⇒ data modify "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" my_Custom_Path2 insert from entity "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" my_Custom_Path\n")])])]),a("p",[t._v("For string subcommands 1.19.4 use the corresponding constructors "),a("code",[t._v("setString, mergeString, prependString, appendString")]),t._v(" and "),a("code",[t._v("insertString")]),t._v(" similar to above, but you can also add start and end indezies to cut of the string:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("DataModify String")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("dynamic")]),t._v(" "),a("td",[t._v("The source of the modification. Can be a Map, String, Number, Entity or Location")])]),t._v(" "),a("tr",[a("td",[t._v("fromPath")]),t._v(" "),a("td",[t._v("optional path for the Entity or Location source from where to read the data")])]),t._v(" "),a("tr",[a("td",[t._v("start")]),t._v(" "),a("td",[t._v("optional start index for substring")])]),t._v(" "),a("tr",[a("td",[t._v("end")]),t._v(" "),a("td",[t._v("optional end index for substring")])])])]),t._v(" "),a("h3",{attrs:{id:"data-copy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-copy"}},[t._v("#")]),t._v(" Data.copy")]),t._v(" "),a("p",[t._v("A handy shortcut for that is the Data.copy constructor, which just copies a property from one path to another:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Data.copy")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("dynamic")]),t._v(" "),a("td",[t._v("The target Entity OR Location which you want to modify")])]),t._v(" "),a("tr",[a("td",[t._v("path")]),t._v(" "),a("td",[t._v("the nbt path you want to copy to")])]),t._v(" "),a("tr",[a("td",[t._v("from")]),t._v(" "),a("td",[t._v("The source Entity OR Block")])]),t._v(" "),a("tr",[a("td",[t._v("fromPath")]),t._v(" "),a("td",[t._v("The source nbt path")])])])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_Custom_Path2"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tfrom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~ ~-1 ~"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tfromPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Items[0].tag.display.name"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ data modify "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" my_Custom_Path2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" from block "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n")])])]),a("h3",{attrs:{id:"data-fromscore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-fromscore"}},[t._v("#")]),t._v(" Data.fromScore")]),t._v(" "),a("p",[t._v("You can also convert a score directly to a nbt field with Data.fromScore:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Data.fromScore")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("dynamic")]),t._v(" "),a("td",[t._v("The target Entity OR Location which you want to modify")])]),t._v(" "),a("tr",[a("td",[t._v("path")]),t._v(" "),a("td",[t._v("the nbt path you want to copy to")])]),t._v(" "),a("tr",[a("td",[t._v("score")]),t._v(" "),a("td",[t._v("The source Score")])]),t._v(" "),a("tr",[a("td",[t._v("scale")]),t._v(" "),a("td",[t._v("optional int (default = 1)")])]),t._v(" "),a("tr",[a("td",[t._v("datatype")]),t._v(" "),a("td",[t._v("a Java datatype for the score(default = byte)")])])])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromScore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_Custom_Path"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tscore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myscore"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ execute store result entity "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" my_Custom_Path "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" byte run scoreboard players "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@e")]),t._v(" myscore\n")])])]),a("h3",{attrs:{id:"datastorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datastorage"}},[t._v("#")]),t._v(" DataStorage")]),t._v(" "),a("p",[t._v("Since 1.15 you can store nbt data globally. To use this with objD include a DataStorage as a target.")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("merge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataStorage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example:store"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tnbt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Also take a look at the objD "),a("a",{attrs:{href:"/utils#storage"}},[t._v("Storage API")]),t._v(" for easier accessibility.")]),t._v(" "),a("h2",{attrs:{id:"item"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#item"}},[t._v("#")]),t._v(" Item")]),t._v(" "),a("iframe",{staticStyle:{margin:"0 calc(50% - 280px)"},attrs:{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/6aS3K3khuYI",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),t._v(" "),a("p",[t._v("The Item class represents an item in an inventory in Minecraft. It is used in the "),a("a",{attrs:{href:""}},[t._v("Give")]),t._v(" or Nbt Commands.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Item | Block | String")]),t._v(" "),a("td",[t._v("the type of item(required, see example)")])]),t._v(" "),a("tr",[a("td",[t._v("count")]),t._v(" "),a("td",[t._v("Integer value for the amount of stacked items")])]),t._v(" "),a("tr",[a("td",[t._v("slot")]),t._v(" "),a("td",[t._v("The current Slot of the item(does not work for give)")])]),t._v(" "),a("tr",[a("td",[t._v("damage")]),t._v(" "),a("td",[t._v("the used durability of the item")])]),t._v(" "),a("tr",[a("td",[t._v("hideFlags")]),t._v(" "),a("td",[t._v("int from 1 to 63 describing which information to hide")])]),t._v(" "),a("tr",[a("td",[t._v("model")]),t._v(" "),a("td",[t._v("int describing which model varient should be used")])]),t._v(" "),a("tr",[a("td",[t._v("name")]),t._v(" "),a("td",[t._v("a TextComponent showing a name")])]),t._v(" "),a("tr",[a("td",[t._v("lore")]),t._v(" "),a("td",[t._v("a List of TextComponents giving extra information")])]),t._v(" "),a("tr",[a("td",[t._v("nbt")]),t._v(" "),a("td",[t._v("addional NBT as Dart Map")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Give")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\titem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iron_axe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// OR Blocks.stone OR "whatever id"')]),t._v("\n\t\tcount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TextComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My Item"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Color.Black")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tlore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TextComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My Description"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Color.Blue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tdamage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tmodel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3390001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tnbt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"customNBT"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n⇒ give "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" minecraft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("iron_axe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"customNBT"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Damage"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CustomModelData"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3390001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"display"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{\\"text\\":\\"My Item\\",\\"color\\":\\"black\\"}"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lore"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{\\"text\\":\\"My Description\\",\\"color\\":\\"blue\\"}"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),a("p",[t._v("or very simple")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Give")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.Selected")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\titem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apple\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n⇒ give "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@s")]),t._v(" minecraft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("apple\n")])])]),a("p",[a("strong",[t._v("Item.copyWith")]),t._v(" creates a copy of the current Item overriding specified properties.")]),t._v(" "),a("p",[a("strong",[t._v("Item.fromJson")]),t._v(" creates an Item based on nbt or json data.")]),t._v(" "),a("p",[t._v("Items is like Entities or Blocks a utility class to provide a list of all available items.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Item([minecraft_item_id])")]),t._v(" "),a("th",[t._v("creates a Item from a String")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Items.[minecraft_item_id]")]),t._v(" "),a("td",[t._v("there is also an value for each item in Minecraft")])])])]),t._v(" "),a("h3",{attrs:{id:"hideflags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hideflags"}},[t._v("#")]),t._v(" HideFlags")]),t._v(" "),a("p",[t._v("To help you with the hideFlags value, there is the HideFlags method. It translates the human readable boolean values into an int.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("HideFlags")]),t._v(" "),a("th",[t._v("bools")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("enchant")]),t._v(" "),a("td",[t._v("whether to show the enchantments")])]),t._v(" "),a("tr",[a("td",[t._v("attributes")]),t._v(" "),a("td",[t._v("whether to show the attributes")])]),t._v(" "),a("tr",[a("td",[t._v("unbreakable")]),t._v(" "),a("td",[t._v("whether to show the unbreakable tag")])]),t._v(" "),a("tr",[a("td",[t._v("canDestroy")]),t._v(" "),a("td",[t._v("whether to show the canDestroy tag")])]),t._v(" "),a("tr",[a("td",[t._v("canPlaceOn")]),t._v(" "),a("td",[t._v("whether to show the canPlaceOn tag")])]),t._v(" "),a("tr",[a("td",[t._v("others")]),t._v(" "),a("td",[t._v("whether to show other nbt information")])]),t._v(" "),a("tr",[a("td",[t._v("dye")]),t._v(" "),a("td",[t._v("whether to show other nbt information")])]),t._v(" "),a("tr",[a("td",[t._v("armorTrims")]),t._v(" "),a("td",[t._v("whether to show other nbt information")])])])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" flags "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HideFlags")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unbreakable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" others"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// = 38")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("hideFlags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"slot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slot"}},[t._v("#")]),t._v(" Slot")]),t._v(" "),a("p",[t._v("The Slot object gives you certain utils to manipulate Inventories and Containers with the Item, Replaceitem or Data.\nEvery Slot has a String(slot) like "),a("code",[t._v("inventory.10")]),t._v(" used in replaceitem and an id like "),a("code",[t._v("19")]),t._v(" that is used with nbt data.\nobjD should change between these values automatically for the specific usecase.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("constructor")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("slot")]),t._v(" "),a("td",[t._v("String for Replaceitem")])]),t._v(" "),a("tr",[a("td",[t._v("id")]),t._v(" "),a("td",[t._v("int for NBT")])])])]),t._v(" "),a("h3",{attrs:{id:"constants"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constants"}},[t._v("#")]),t._v(" Constants")]),t._v(" "),a("p",[t._v("More important are all the constants:")]),t._v(" "),a("ul",[a("li",[t._v("Slot.Hotbar[0-8]")]),t._v(" "),a("li",[t._v("Slot.Inventory[0-26]")]),t._v(" "),a("li",[t._v("Slot.Enderchest[0-26]")]),t._v(" "),a("li",[t._v("Slot.Container[0-53]")]),t._v(" "),a("li",[t._v("Slot.MainHand")]),t._v(" "),a("li",[t._v("Slot.OffHand")]),t._v(" "),a("li",[t._v("Slot.Head")]),t._v(" "),a("li",[t._v("Slot.Chest")]),t._v(" "),a("li",[t._v("Slot.Legs")]),t._v(" "),a("li",[t._v("Slot.Feet")])]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReplaceItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity.All")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\titem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("golden_helmet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tslot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Slot.Head")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ replaceitem entity "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@a")]),t._v(" armor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head minecraft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("golden_helmet\n")])])]),a("h3",{attrs:{id:"helpers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#helpers"}},[t._v("#")]),t._v(" Helpers")]),t._v(" "),a("p",[t._v("Together with this objD also introduces helpers to quickly find the desired slot.")]),t._v(" "),a("p",[a("strong",[t._v("Slot.inv")]),t._v(" takes in two numbers, like "),a("code",[t._v("2,6")]),t._v("\nThe first number represents the row in the inventory, so the second row\nAnd the second number is the sixth slot of that row.")]),t._v(" "),a("p",[t._v("objD calculates the corresponding Slot. In this case "),a("code",[t._v("inventory.14")]),t._v(".")]),t._v(" "),a("blockquote",[a("p",[t._v("Notice: also the hotbar can be calculated with this. It is the 4th row")])]),t._v(" "),a("p",[a("strong",[t._v("Slot.chest")]),t._v(" takes in numbers, like "),a("code",[t._v("5,6")]),t._v(" and an optional boolean for using an enderchest\nAnd does exactly the same but with a container, like a chest.")]),t._v(" "),a("p",[a("strong",[t._v("Slot.drop")]),t._v(" takes in numbers, like "),a("code",[t._v("1,3")]),t._v("\nThis calculates the rows and columns for a 3x3 Container like a Dropper or a Dispenser.\nTherefore just values from 1 to 3 are allowed.")]),t._v(" "),a("p",[a("strong",[t._v("Slot.craft")]),t._v(" used to mark a 3x3 space inside a conventional container.\ntakes in two numbers, like Slot.inv or one number from 1-9. The start options marks the upper left.")]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReplaceItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("block")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Location")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("here")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\titem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tslot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Slot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⇒ replaceitem block "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("  container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" minecraft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("beef\n")])])]),a("h2",{attrs:{id:"time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#time"}},[t._v("#")]),t._v(" Time")]),t._v(" "),a("p",[t._v("Object that represents time in minecraft. Usually translated into ticks (20ticks = 1 second).")]),t._v(" "),a("p",[t._v("You can directly construct the time from the integer number of ticks:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2400")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("However this is not the easiest way to construct times. The simplest is to use number extensions explained below. For a handy interface which does the conversions automatically, use "),a("code",[t._v("Time.duration")]),t._v(":")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Time.duration")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ticks")]),t._v(" "),a("td",[t._v("integer number of ticks(optional)")])]),t._v(" "),a("tr",[a("td",[t._v("days")]),t._v(" "),a("td",[t._v("number of ingame days(optional)")])]),t._v(" "),a("tr",[a("td",[t._v("minutes")]),t._v(" "),a("td",[t._v("number of minutes(optional)")])]),t._v(" "),a("tr",[a("td",[t._v("seconds")]),t._v(" "),a("td",[t._v("number of seconds(optional)")])])])]),t._v(" "),a("p",[t._v("If you just want a integer number of seconds, minutes or days, you can also use constant constructors "),a("code",[t._v("Time.seconds, Time.minutes, Time.days")]),t._v(".")]),t._v(" "),a("p",[t._v("So we can write the same 1min 30s from above the following ways(also using fractional timesteps):")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("seconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("duration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("minutes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("duration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("minutes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("In case of the "),a("RouterLink",{attrs:{to:"/wrappers/#effect"}},[t._v("Effect")]),t._v(" widget, it might also be useful to pass infinite time.\nThis can be done with "),a("code",[t._v("Time.infinite()")]),t._v(". Otherwise when a finite time is expected, an error is thrown.")],1),t._v(" "),a("h3",{attrs:{id:"number-extensions-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-extensions-operators"}},[t._v("#")]),t._v(" Number Extensions & Operators")]),t._v(" "),a("p",[t._v("Yet an even "),a("strong",[t._v("more intuitive")]),t._v(" way is to use built in getters on the "),a("code",[t._v("num")]),t._v(" type and operators.")]),t._v(" "),a("p",[t._v("On any number("),a("code",[t._v("int, double, ...")]),t._v(") you can call "),a("code",[t._v(".ticks, .seconds, .minutes")]),t._v(" and "),a("code",[t._v(".days")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2400.")]),t._v("ticks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.")]),t._v("seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minutes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("Also all common math and comparison operators are available:")]),t._v(" "),a("div",{staticClass:"language-dart extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[t._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("minutes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30.")]),t._v("seconds \nt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.")]),t._v("seconds\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.")]),t._v("seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something conditional")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("p",[t._v("Using this style is highly recommended, as it leads to readable and understandable code.")]),t._v(" "),a("h3",{attrs:{id:"string-conversion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-conversion"}},[t._v("#")]),t._v(" String Conversion")]),t._v(" "),a("p",[t._v("In commands when Time is used, string are generated dynamically.")]),t._v(" "),a("p",[t._v("When days can be expressed in "),a("code",[t._v("0.5")]),t._v(" steps, the suffix "),a("code",[t._v("d")]),t._v(" is generated.")]),t._v(" "),a("p",[t._v("When seconds can be expressed in "),a("code",[t._v("0.25")]),t._v(" steps, the suffix "),a("code",[t._v("s")]),t._v(" is generated.")]),t._v(" "),a("p",[t._v("So "),a("strong",[t._v("a word of warning")]),t._v(", even when providing integer ticks, objD can decide to simplify the commands.\nFor example "),a("code",[t._v("Time(10)")]),t._v(" becomes "),a("code",[t._v("0.5s")]),t._v(". This behaviour might change in the future, if there are serious concerns.")]),t._v(" "),a("p",[t._v("In case you want to have just the ticks, either use "),a("code",[t._v(".ticks")]),t._v(" on a Time object or call "),a("code",[t._v("toString")]),t._v(" with "),a("code",[t._v("reduce")]),t._v(" set to false: "),a("code",[t._v("Time(10).toString(reduce=false) => 10")]),t._v(".")])])}),[],!1,null,null,null);a.default=e.exports}}]);